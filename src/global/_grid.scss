$_gutters: (4, 8, 12, 16, 20);
$_columns: 12;
$_column-percent: 100 / $_columns;
$_breakpoints: (
  xs: 568px,
  sm: 768px,
  md: 960px,
  lg: 1200px,
);

%column {
  box-sizing: border-box;
  display: block;
  position: relative;
}

@mixin column($width: 1) {
  @extend %column;
  @include column-width($width);
}

@mixin column-width($width) {
  @if $width == 1 {
    flex-grow: 1;
  } @else {
    flex: 0 0 $width * 1%;
  }
}

@mixin column-push($offset) {
  left: $offset * 1%;
}

@mixin column-pull($offset) {
  right: $offset * 1%;
}

.duo-grid {
  box-sizing: border-box;
  display: flex;
  height: auto;
  flex-wrap: wrap;
  padding: 0;
  position: relative;
  margin: 0;
  max-width: 1200px;
  zoom: 1;
  width: 100%;

  @each $name, $value in $_breakpoints {
    &.duo-grid-#{$name} {
      max-width: $value;
    }
  }

  @each $gutter in $_gutters {
    .gutter-#{$gutter} *[class^='col'] {
      padding-left: $gutter * 1px;
      padding-right: $gutter * 1px;
    }
  }

  .col {
    @include column();
  }

  @for $i from 1 through $_columns {
    .col-#{$i} {
      @include column($_column-percent * $i);
    }

    .col-push-#{$i} {
      @include column-push($_column-percent * $i);
    }

    .col-pull-#{$i} {
      @include column-pull($_column-percent * $i);
    }
  }

  @each $name, $value in $_breakpoints {
    @media screen and (min-width: $value) {
      @for $i from 1 through $_columns {
        .col-#{$name}-#{$i} {
          @include column-width($_column-percent * $i);
        }
      }
    }
  }
}
